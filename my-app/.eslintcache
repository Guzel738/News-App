[{"/usr/src/app/my-app/src/index.js":"1","/usr/src/app/my-app/src/App.js":"2","/usr/src/app/my-app/src/reportWebVitals.js":"3","/usr/src/app/my-app/src/pages/Home.js":"4","/usr/src/app/my-app/src/pages/StoryPage.js":"5","/usr/src/app/my-app/src/Api.js":"6","/usr/src/app/my-app/src/components/Story.js":"7","/usr/src/app/my-app/src/components/TreeView.js":"8","/usr/src/app/my-app/src/components/Comment.js":"9"},{"size":478,"mtime":1607683890000,"results":"10","hashOfConfig":"11"},{"size":521,"mtime":1607683890000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607683890000,"results":"13","hashOfConfig":"11"},{"size":1256,"mtime":1607683890000,"results":"14","hashOfConfig":"11"},{"size":4124,"mtime":1607875562589,"results":"15","hashOfConfig":"11"},{"size":450,"mtime":1607780520732,"results":"16","hashOfConfig":"11"},{"size":2604,"mtime":1607683890000,"results":"17","hashOfConfig":"11"},{"size":507,"mtime":1607683890000,"results":"18","hashOfConfig":"11"},{"size":1130,"mtime":1607683890000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"p5p4y",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/usr/src/app/my-app/src/index.js",[],["40","41"],"/usr/src/app/my-app/src/App.js",[],"/usr/src/app/my-app/src/reportWebVitals.js",[],"/usr/src/app/my-app/src/pages/Home.js",[],"/usr/src/app/my-app/src/pages/StoryPage.js",[],"/usr/src/app/my-app/src/Api.js",[],"/usr/src/app/my-app/src/components/Story.js",[],"/usr/src/app/my-app/src/components/TreeView.js",[],"/usr/src/app/my-app/src/components/Comment.js",["42"],"import React, {useEffect, useState} from 'react'\nimport TreeItem from \"@material-ui/lab/TreeItem\"\nimport {useStateIfMounted} from \"use-state-if-mounted\"\nimport ReactHtmlParser from 'react-html-parser'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {getStory} from \"../Api\";\n\nconst useStyles = makeStyles({\n    treeItem: {\n        background: '#f5f5f5',\n        marginBottom: '10px'\n    }\n})\n\nexport const Comment = ({ parentId }) => {\n    const [comment, setComment] = useStateIfMounted({})\n    const classes = useStyles()\n\n    const getComment = () => {\n        getStory(parentId).then(r => setComment(r))\n    }\n\n    useEffect(() => {\n        getComment()\n        setInterval(() => {\n            getComment()\n        }, 60000)\n        // eslint-disable-next-line\n    }, [])\n\n    const {text, kids} = comment\n\n    return (\n        <TreeItem nodeId={parentId.toString()} label={ReactHtmlParser(text)} className={classes.treeItem}>\n            {kids\n                ? kids.map((parentId) => (\n                    <Comment key={parentId} parentId={parentId} /> ))\n                : null}\n        </TreeItem>\n    );\n}\n\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":35},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]